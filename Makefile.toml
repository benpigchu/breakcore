[config]


[env]
KERNEL_ELF = "target/riscv64gc-unknown-none-elf/debug/breakcore-os"
KERNEL_BIN = "${KERNEL_ELF}.bin"

[tasks.default]
workspace = false
alias = "empty"

[tasks.install-rustsbi]
workspace = false
condition = { files_not_exist = ["${CARGO_MAKE_WORKING_DIRECTORY}/bootloader/rustsbi-qemu.bin"] }
install_script = '''
mkdir -p bootloader
echo Installing RustSBI...
curl -L https://github.com/rcore-os/rCore-Tutorial-v3/raw/ch1/bootloader/rustsbi-qemu.bin --output bootloader/rustsbi-qemu.bin
'''

[tasks.run]
workspace = false
script = '''
echo ${KERNEL_BIN}
qemu-system-riscv64 \
	-machine virt \
	-nographic \
	-bios bootloader/rustsbi-qemu.bin \
	-device loader,file=${KERNEL_BIN},addr=0x80020000
'''
dependencies = ["install-rustsbi","kernel"]

[tasks.kernel]
workspace = false
dependencies = ["build-kernel"]
script = '''
rust-objcopy --binary-architecture=riscv64  \
	${KERNEL_ELF} \
	--strip-all -O binary \
	${KERNEL_BIN}
'''

[tasks.build-kernel]
workspace = false
env = { CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS = ["os"] }
run_task = { name = "build", fork = true }

[tasks.clean]
workspace = false